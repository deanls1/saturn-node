map $http_accept $format_header {
    default                     "";
    "application/vnd.ipld.car" "car";
    "application/vnd.ipld.raw" "raw";
}

# Restrict valid values to prevent cache key explosion.
map $arg_format $format_query {
    default "";
    "car"   "car";
    "raw"   "raw";
}

# Coalesce header & query values to make a single cache key component.
map $format_query $format_final {
    default $format_header;
    "car"   "car";
    "raw"   "raw";
}

server {
    listen 443 default_server ssl http2 reuseport;

    ssl_certificate             /usr/src/app/shared/ssl/node.crt;
    ssl_certificate_key         /usr/src/app/shared/ssl/node.key;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers                 HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_buffer_size             4k;

    server_name _; # This is just an invalid value which will never trigger on a real hostname
    server_name_in_redirect off;
#buffer=128k
    access_log  /var/log/nginx/node-access.log node ;

    limit_req   zone=one burst=200 nodelay;

    root  /usr/src/app/;

    location = / {
        return 302 http://strn.network;
    }

    location / {
        if ($arg_clientId = "") {
            return 403;
        }

        proxy_pass              http://node_backend;
        proxy_buffering         on;
        proxy_http_version      1.1;

        proxy_read_timeout      2m;
        proxy_connect_timeout   2m;

        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Connection      "";

        proxy_cache             my_cache;
        proxy_cache_key         $scheme$proxy_host$uri$format_final;
        proxy_cache_lock        on;
        proxy_cache_valid       180d;
        proxy_cache_lock_age    2m;
        proxy_cache_use_stale   error timeout invalid_header updating http_502 http_503 http_504 http_429;
        proxy_no_cache          $arg_nocache;
        proxy_cache_bypass      $arg_nocache;

        add_header 'Saturn-Cache-Status'            $upstream_cache_status;
        add_header 'Saturn-Transfer-Id'             $request_id;
        add_header 'Timing-Allow-Origin'            '*';
        add_header 'Access-Control-Allow-Origin'    '*' always;
        add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers'  '*' always;
        add_header 'Strict-Transport-Security'      'max-age=63072000; includeSubDomains; preload' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Timing-Allow-Origin'            '*';
            add_header 'Access-Control-Allow-Origin'    '*';
            add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age'         1728000;
            add_header 'Content-Type'                   'text/plain; charset=utf-8';
            add_header 'Content-Length'                 0;
            return 204;
        }
    }

    location = /basic_status {
        stub_status;
    }
}

server {
    listen 80 default_server reuseport;

    server_name _;

    return 301 https://$host$request_uri;
}
